#!/bin/bash
set -e

echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–π MR –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º –≤ –ø—Ä–æ–¥..."

# === –ó–∞–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö ===
# VARIABLES_FROM_GITLAB_PROJECT
APPROVERS_ARRAY=(${APPROVERS//,/ })
GITLAB_TOKEN="${GITLAB_API_BOT}"

# PREDEFINED_VARIABLES_OF_PIPELINE
API_URL="${CI_API_V4_URL}"
PROJECT_ID="${CI_PROJECT_ID}"
COMMIT_SHA="${CI_COMMIT_SHA}"
TARGET_BRANCH="${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}"

# === –ü–æ–ª—É—á–∞–µ–º MR ===
MR_INFO=$(curl --silent --request GET \
  --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
  "${API_URL}/projects/${PROJECT_ID}/merge_requests" \
  | jq -c ".[] | select(.sha == \"${COMMIT_SHA}\" and .state == \"opened\" and .target_branch == \"${TARGET_BRANCH}\")")

if [ -z "$MR_INFO" ]; then
  echo "‚ùå Merge Request –Ω–µ –Ω–∞–π–¥–µ–Ω."
  exit 1
fi

MR_ID=$(echo $MR_INFO | jq '.iid')

# === –ü–æ–ª—É—á–∞–µ–º approvals ===
APPROVALS=$(curl --silent --request GET \
  --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
  "${API_URL}/projects/${PROJECT_ID}/merge_requests/${MR_ID}/approvals")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ–¥–æ–±—Ä–µ–Ω–∏–π –æ—Ç –∞–≤—Ç–æ—Ä–æ–≤
APPROVED=false
MAX_RETRIES=7  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
RETRY_DELAY=30  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

for ((i=1; i<=MAX_RETRIES; i++)); do
  # –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—â—ë –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏
  NOT_APPROVED=()

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –∞–≤—Ç–æ—Ä–æ–≤
  for AUTHOR in "${APPROVERS_ARRAY[@]}"; do
    if ! echo "${APPROVALS}" | jq -e ".approved_by[] | select(.user.username == \"${AUTHOR}\")" > /dev/null; then
      NOT_APPROVED+=("${AUTHOR}")
    fi
  done

  # –ï—Å–ª–∏ –≤—Å–µ –æ–¥–æ–±—Ä–∏–ª–∏, –≤—ã—Ö–æ–¥–∏–º
  if [ ${#NOT_APPROVED[@]} -eq 0 ]; then
    APPROVED=true
    break
  fi

  echo "‚è≥ –û–∂–∏–¥–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏—è –æ—Ç: ${NOT_APPROVED[*]} (–ø–æ–ø—ã—Ç–∫–∞ $i/${MAX_RETRIES})"
  sleep ${RETRY_DELAY}

  # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏—è—Ö
  APPROVALS=$(curl --silent --request GET \
    --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
    "${API_URL}/projects/${PROJECT_ID}/merge_requests/${MR_ID}/approvals")
done

if [ "$APPROVED" = true ]; then
  echo "‚úÖ MR –æ–¥–æ–±—Ä–µ–Ω –≤—Å–µ–º–∏: ${APPROVERS[*]}"
else
  echo "‚ùå –ù–µ –ø–æ–ª—É—á–µ–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –æ—Ç –≤—Å–µ—Ö: ${APPROVERS[*]}"
  exit 1
fi
